# Docker build for IoT testbed pentest
# january 28 2020

FROM unilynx/phusion-baseimage-1804 as ubu
MAINTAINER s.lazarus@unsw.edu.au

# NOT needed if we mount ./pentest:/pentest
# WORKDIR /pentest
# COPY requirements.txt /pentest/requirements.txt 

# non-interactive when installing packages
ENV DEBIAN_FRONTEND noninteractive
# update image and get some essentials
RUN apt-get update && apt-get install -y apt-utils locales gnupg2 ca-certificates apt-transport-https wget nano 
ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'
# python3 goes bonkers if these are not set

# perl, ruby...oh my this takes time
RUN apt-get install -y net-tools iptables nginx python3-dev perl libwww-perl nikto hydra openssh-server \
 python3-pip python python-pip libatlas-base-dev libopenjp2-7 python3-tk tshark python-lxml \
 scapy git graphviz graphviz-dev wget graphviz libgraphviz-dev pkg-config nmap python-pycurl \
 smbclient sslscan iputils-ping ruby-full gem rubygems ruby-dev zlib1g-dev libcurl4-gnutls-dev && \
 perl -MCPAN -e 'install Net::SNMP' && perl -MCPAN -e 'install Crypt::CBC' && perl -MCPAN -e 'install Number::Bytes::Human' && \
 gem install wpscan && pip3 install droopescan && \
 git clone https://github.com/portcullislabs/enum4linux.git /root/enum4linux && ln -s /root/enum4linux/enum4linux.pl /usr/local/bin

FROM ubu as ubu2
RUN pip3 install netaddr && pip3 install dnspython &&  pip3 install pysnmp && \
 git clone https://github.com/darkoperator/dnsrecon.git /root/dnsrecon && \
 cp /root/dnsrecon/dnsrecon.py /root/dnsrecon/dnsrecon && \
 chmod +x /root/dnsrecon/dnsrecon && ln -s /root/dnsrecon/dnsrecon /usr/local/bin

# some late additions
RUN cat wlan_config.txt | grep root| chpasswd  && \
 pip install wfuzz && git clone https://github.com/ShawnDEvans/smbmap.git /root/smbmap && cd /root/smbmap && pip3 install -r requirements.txt && \
 ln -s /root/smbmap/smbmap.py /usr/local/bin && \
 wget https://raw.githubusercontent.com/pwnieexpress/pwn_plug_sources/master/src/snmpcheck/snmpcheck-1.8.pl -O /root/snmpcheck-1.8.pl && \ 
 chmod  +x /root/snmpcheck-1.8.pl && ln -s /root/snmpcheck-1.8.pl /usr/local/bin && \
 pip install pysnmp && wget https://raw.githubusercontent.com/curesec/tools/master/snmp/snmp-walk.py -O /root/snmp-walk.py && chmod +x /root/snmp-walk.py && ln -s /root/snmp-walk.py /usr/local/bin && \
 git clone https://github.com/rezasp/joomscan.git /root/joomscan && chmod +x /root/joomscan/joomscan.pl && ln -s /root/joomscan/joomscan.pl /usr/local/bin && \
 sed -i "1s/.*/\#\!\/usr\/bin\/perl\ \-\-/" /root/joomscan/joomscan.pl && \
 rm /var/www/html/index.nginx-debian.html && \
 pip install shodan


# cameradar
RUN apt-get install software-properties-common -y && \
 add-apt-repository ppa:gophers/archive -y && \
 apt-get update -y && \
 apt-get install golang-1.11-go -y && \ 
 apt-get install libcurl4-openssl-dev -y && \
 export PATH=/usr/lib/go-1.11/bin:/root/go/bin:${PATH} && \
 export GO111MODULE=auto  && \
 go get github.com/Ullaakut/cameradar && \
 cd /root/go/src/github.com/Ullaakut/cameradar/cmd/cameradar && \
 export GO111MODULE=on && \
 go install && \
 echo "export PATH=/usr/lib/go-1.11/bin:/root/go/bin:${PATH}" >> /root/.bashrc && \
 echo "export GOPATH=/root/go" >> /root/.bashrc

# Clean up APT when done.
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

ENTRYPOINT /bin/bash




